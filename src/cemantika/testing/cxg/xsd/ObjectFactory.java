//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.01 at 02:47:35 PM GMT-03:00 
//


package cemantika.testing.cxg.xsd;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.drools.drools_5_0.process package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.drools.drools_5_0.process
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Mapping }
     * 
     */
    public Mapping createMapping() {
        return new Mapping();
    }

    /**
     * Create an instance of {@link Dynamic }
     * 
     */
    public Dynamic createDynamic() {
        return new Dynamic();
    }

    /**
     * Create an instance of {@link RuleSet }
     * 
     */
    public RuleSet createRuleSet() {
        return new RuleSet();
    }

    /**
     * Create an instance of {@link Header }
     * 
     */
    public Header createHeader() {
        return new Header();
    }

    /**
     * Create an instance of {@link Nodes }
     * 
     */
    public Nodes createNodes() {
        return new Nodes();
    }

    /**
     * Create an instance of {@link Globals }
     * 
     */
    public Globals createGlobals() {
        return new Globals();
    }

    /**
     * Create an instance of {@link InPorts }
     * 
     */
    public InPorts createInPorts() {
        return new InPorts();
    }

    /**
     * Create an instance of {@link TimerNode }
     * 
     */
    public TimerNode createTimerNode() {
        return new TimerNode();
    }

    /**
     * Create an instance of {@link State }
     * 
     */
    public State createState() {
        return new State();
    }

    /**
     * Create an instance of {@link Composite }
     * 
     */
    public Composite createComposite() {
        return new Composite();
    }

    /**
     * Create an instance of {@link Milestone }
     * 
     */
    public Milestone createMilestone() {
        return new Milestone();
    }

    /**
     * Create an instance of {@link Triggers }
     * 
     */
    public Triggers createTriggers() {
        return new Triggers();
    }

    /**
     * Create an instance of {@link InPort }
     * 
     */
    public InPort createInPort() {
        return new InPort();
    }

    /**
     * Create an instance of {@link EventFilter }
     * 
     */
    public EventFilter createEventFilter() {
        return new EventFilter();
    }

    /**
     * Create an instance of {@link Fault }
     * 
     */
    public Fault createFault() {
        return new Fault();
    }

    /**
     * Create an instance of {@link MetaData }
     * 
     */
    public MetaData createMetaData() {
        return new MetaData();
    }

    /**
     * Create an instance of {@link Timer }
     * 
     */
    public Timer createTimer() {
        return new Timer();
    }

    /**
     * Create an instance of {@link Import }
     * 
     */
    public Import createImport() {
        return new Import();
    }

    /**
     * Create an instance of {@link OutPort }
     * 
     */
    public OutPort createOutPort() {
        return new OutPort();
    }

    /**
     * Create an instance of {@link Action }
     * 
     */
    public Action createAction() {
        return new Action();
    }

    /**
     * Create an instance of {@link Constraints }
     * 
     */
    public Constraints createConstraints() {
        return new Constraints();
    }

    /**
     * Create an instance of {@link Global }
     * 
     */
    public Global createGlobal() {
        return new Global();
    }

    /**
     * Create an instance of {@link ExceptionHandlers }
     * 
     */
    public ExceptionHandlers createExceptionHandlers() {
        return new ExceptionHandlers();
    }

    /**
     * Create an instance of {@link Type }
     * 
     */
    public Type createType() {
        return new Type();
    }

    /**
     * Create an instance of {@link Value }
     * 
     */
    public Value createValue() {
        return new Value();
    }

    /**
     * Create an instance of {@link FunctionImports }
     * 
     */
    public FunctionImports createFunctionImports() {
        return new FunctionImports();
    }

    /**
     * Create an instance of {@link EventNode }
     * 
     */
    public EventNode createEventNode() {
        return new EventNode();
    }

    /**
     * Create an instance of {@link Timers }
     * 
     */
    public Timers createTimers() {
        return new Timers();
    }

    /**
     * Create an instance of {@link FunctionImport }
     * 
     */
    public FunctionImport createFunctionImport() {
        return new FunctionImport();
    }

    /**
     * Create an instance of {@link Split }
     * 
     */
    public Split createSplit() {
        return new Split();
    }

    /**
     * Create an instance of {@link ForEach }
     * 
     */
    public ForEach createForEach() {
        return new ForEach();
    }

    /**
     * Create an instance of {@link OnExit }
     * 
     */
    public OnExit createOnExit() {
        return new OnExit();
    }

    /**
     * Create an instance of {@link Start }
     * 
     */
    public Start createStart() {
        return new Start();
    }

    /**
     * Create an instance of {@link Connection }
     * 
     */
    public Connection createConnection() {
        return new Connection();
    }

    /**
     * Create an instance of {@link ActionNode }
     * 
     */
    public ActionNode createActionNode() {
        return new ActionNode();
    }

    /**
     * Create an instance of {@link Imports }
     * 
     */
    public Imports createImports() {
        return new Imports();
    }

    /**
     * Create an instance of {@link Parameter }
     * 
     */
    public Parameter createParameter() {
        return new Parameter();
    }

    /**
     * Create an instance of {@link Trigger }
     * 
     */
    public Trigger createTrigger() {
        return new Trigger();
    }

    /**
     * Create an instance of {@link Join }
     * 
     */
    public Join createJoin() {
        return new Join();
    }

    /**
     * Create an instance of {@link SubProcess }
     * 
     */
    public SubProcess createSubProcess() {
        return new SubProcess();
    }

    /**
     * Create an instance of {@link Swimlane }
     * 
     */
    public Swimlane createSwimlane() {
        return new Swimlane();
    }

    /**
     * Create an instance of {@link Work }
     * 
     */
    public Work createWork() {
        return new Work();
    }

    /**
     * Create an instance of {@link OutPorts }
     * 
     */
    public OutPorts createOutPorts() {
        return new OutPorts();
    }

    /**
     * Create an instance of {@link Variable }
     * 
     */
    public Variable createVariable() {
        return new Variable();
    }

    /**
     * Create an instance of {@link OnEntry }
     * 
     */
    public OnEntry createOnEntry() {
        return new OnEntry();
    }

    /**
     * Create an instance of {@link Variables }
     * 
     */
    public Variables createVariables() {
        return new Variables();
    }

    /**
     * Create an instance of {@link HumanTask }
     * 
     */
    public HumanTask createHumanTask() {
        return new HumanTask();
    }

    /**
     * Create an instance of {@link Swimlanes }
     * 
     */
    public Swimlanes createSwimlanes() {
        return new Swimlanes();
    }

    /**
     * Create an instance of {@link ExceptionHandler }
     * 
     */
    public ExceptionHandler createExceptionHandler() {
        return new ExceptionHandler();
    }

    /**
     * Create an instance of {@link End }
     * 
     */
    public End createEnd() {
        return new End();
    }

    /**
     * Create an instance of {@link WorkItem }
     * 
     */
    public WorkItem createWorkItem() {
        return new WorkItem();
    }

    /**
     * Create an instance of {@link Connections }
     * 
     */
    public Connections createConnections() {
        return new Connections();
    }

    /**
     * Create an instance of {@link EventFilters }
     * 
     */
    public EventFilters createEventFilters() {
        return new EventFilters();
    }

    /**
     * Create an instance of {@link Process }
     * 
     */
    public Process createProcess() {
        return new Process();
    }

    /**
     * Create an instance of {@link Constraint }
     * 
     */
    public Constraint createConstraint() {
        return new Constraint();
    }

}
